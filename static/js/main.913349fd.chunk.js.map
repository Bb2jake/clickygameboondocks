{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","imageClicked","id","alt","name","src","image","Wrapper","children","Header","score","highScore","App","state","boondocks","getBoondocksCopy","boondock","find","clicked","alert","setHighScore","restartGame","setState","shuffle","console","log","forEach","sequence","Math","random","sort","a","b","currentScore","this","map","key","Component","JSON","parse","stringify","ReactDOM","render","document","getElementById"],"mappings":"i4EAceA,MAXf,SAAsBC,GAEpB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,gBAAgBC,QAAS,kBAAMF,EAAMG,aAAcH,EAAMI,MACtE,yBAAKC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,W,MCI1BC,MATf,SAAmBT,GAEjB,OAAO,yBAAKC,UAAU,aACpB,yBAAKA,UAAU,OACZD,EAAMU,Y,OCQEC,MAbf,SAAkBX,GAEd,OAAO,yBAAKC,UAAU,0BAClB,yBAAKA,UAAU,yBAAf,yBAGA,uBAAGA,UAAU,oBAAb,2FAGR,uBAAGA,UAAU,gCAAb,gBAA0DD,EAAMY,MAAhE,kBAAsFZ,EAAMa,aCLtFC,E,4MAGJC,MAAQ,CACNC,UAAWF,EAAIG,mBACfL,MAAO,EACPC,UAAW,G,EAGbV,aAAe,SAAAC,GAkBb,IAAMc,EAAW,EAAKH,MAAMC,UAAUG,MAAM,SAAAD,GAAQ,OAAIA,EAASd,KAAOA,MAE9C,IAArBc,EAASE,SAGZC,MAAO,aACP,EAAKC,aAAa,EAAKP,MAAMH,OAC7B,EAAKW,gBAILL,EAASE,SAAU,EACnB,EAAKI,SAAU,CAAEZ,MAAO,EAAKG,MAAMH,MAAQ,IAC3C,EAAKa,UACLC,QAAQC,IAAK,EAAKZ,MAAMH,S,EAK5Ba,QAAU,WAER,EAAKV,MAAMC,UAAUY,SAAS,SAAAV,GAG5BA,EAASW,SAAWC,KAAKC,YAG3B,EAAKhB,MAAMC,UAAUgB,MAAM,SAAEC,EAAGC,GAAL,OAAYD,EAAEJ,SAAWK,EAAEL,YACtD,EAAKL,SAAU,CAAER,UAAW,EAAKD,MAAMC,a,EAMzCO,YAAc,WAIZ,EAAKC,SAAU,CAAER,UAAWF,EAAIG,qBAChC,EAAKO,SAAU,CAAEZ,MAAO,K,EAO1BU,aAAe,SAACa,GACVA,EAAe,EAAKpB,MAAMF,WAC5B,EAAKW,SAAS,CAACX,UAAWsB,K,uDAc7B,IAAD,OACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEvB,MAAOwB,KAAKrB,MAAMH,MAClBC,UAAWuB,KAAKrB,MAAMF,YAIvBuB,KAAKrB,MAAMC,UAAUqB,KAAK,SAAAnB,GAAQ,OACjC,kBAAC,EAAD,CAEEd,GAAIc,EAASd,GACbkC,IAAKpB,EAASd,GACdE,KAAMY,EAASZ,KACfE,MAAOU,EAASV,MAChBL,aAAc,EAAKA,uB,GAzGboC,aAAZzB,EAgFGG,iBAAmB,WACxB,OAAOuB,KAAKC,MAAMD,KAAKE,UAAU1B,KAkCtBF,Q,MCpHf6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.913349fd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction FriendCard ( props )\r\n{\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"img-container\" onClick={() => props.imageClicked( props.id )}>\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper ( props )\r\n{\r\n  return <div className=\"container\">\r\n    <div className=\"row\">\r\n      {props.children}\r\n    </div>\r\n  </div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\n\r\nfunction Header ( props )\r\n{\r\n    return <div className=\"jumbotron bg-secondary\">\r\n        <div className=\"display-4 text-center\">\r\n            Boondocks Memory Game\r\n    </div>\r\n        <p className=\"lead text-center\">\r\n            Click on an image to earn points, but don't click an the same image twice or GAME OVER!\r\n    </p>\r\n<p className=\"float-right score text-white\"> Your Score: {props.score} | High Score: {props.highScore}</p>\r\n    </div>;\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport FriendCard from \"./components/FriendCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport boondocks from \"./boondocks.json\";\r\nimport Header from \"./components/Header\"\r\n\r\nclass App extends Component\r\n{\r\n  // Setting this.state. for booondocks and score \r\n  state = {\r\n    boondocks: App.getBoondocksCopy(),\r\n    score: 0,\r\n    highScore: 0\r\n  };\r\n\r\n  imageClicked = id =>\r\n  {\r\n\r\n    // loop through boondocks json to find element by id\r\n    // for (let i = 0; i < this.state.boondocks.length; i++) {\r\n    //   const element = this.state.boondocks[i];\r\n    //   if (element.id === id) {\r\n    //     // Check the state of clicked\r\n    //     if (element.clicked === true) {\r\n    //       // game over\r\n    //     }else {\r\n    //       element.clicked = true\r\n    //       // increment score\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n    // Filter this.state.friends for friends with an id not equal to the id being removed\r\n    const boondock = this.state.boondocks.find( boondock => boondock.id === id );\r\n    // @ts-ignore\r\n    if ( boondock.clicked === true )\r\n    {\r\n      // game over\r\n      alert( \"Game Over\" )\r\n      this.setHighScore(this.state.score)\r\n      this.restartGame()\r\n    } else\r\n    {\r\n      // @ts-ignore\r\n      boondock.clicked = true\r\n      this.setState( { score: this.state.score + 1 } )\r\n      this.shuffle()\r\n      console.log( this.state.score )\r\n    }\r\n\r\n  };\r\n\r\n  shuffle = () =>\r\n  {\r\n    this.state.boondocks.forEach( boondock =>\r\n    {\r\n      // @ts-ignore\r\n      boondock.sequence = Math.random()\r\n    } );\r\n    // @ts-ignore\r\n    this.state.boondocks.sort( ( a, b ) => a.sequence - b.sequence )\r\n    this.setState( { boondocks: this.state.boondocks } )\r\n\r\n\r\n  }\r\n\r\n\r\n  restartGame = () =>\r\n  {\r\n    \r\n\r\n    this.setState( { boondocks: App.getBoondocksCopy() } )\r\n    this.setState( { score: 0 } )\r\n    \r\n\r\n\r\n  }\r\n\r\n\r\n  setHighScore = (currentScore) => {\r\n    if (currentScore > this.state.highScore) {\r\n      this.setState({highScore: currentScore})\r\n    }\r\n  }\r\n\r\n\r\n  static getBoondocksCopy = () => {\r\n    return JSON.parse(JSON.stringify(boondocks))\r\n  }\r\n\r\n\r\n\r\n\r\n  // Map over this.state.friends and render a FriendCard component for each friend object\r\n  render ()\r\n  {\r\n    return (\r\n      <Wrapper>\r\n        <Header\r\n          score={this.state.score}\r\n          highScore={this.state.highScore}>\r\n\r\n        </Header>\r\n\r\n        {this.state.boondocks.map( boondock => (\r\n          <FriendCard\r\n\r\n            id={boondock.id}\r\n            key={boondock.id}\r\n            name={boondock.name}\r\n            image={boondock.image}\r\n            imageClicked={this.imageClicked}\r\n\r\n\r\n          />\r\n        ) )}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}